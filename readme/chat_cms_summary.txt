
# CMS構想：main.js主導の自動化設計（Summer 2025準備）

## 概要
このチャットでは、アニメランキングページの管理構造を見直し、自動化とテンプレート化を目指すための構想を話し合いました。具体的には、各Weekフォルダにあるindex.htmlを一本化し、共通のmain.html（テンプレート）とmain.js（ロジック）で動的にページを生成するという流れです。

---

## 🔧 構成ファイル案

- `/shared/main.html`：基本のHTMLテンプレート
- `/shared/main.js`：全ウィーク共通で読み込むJS。URLパラメータまたはカレントディレクトリからCurrentWeekを取得し、動的にデータを注入
- `/shared/nav.js`（またはmain.jsに統合）：navbarの動的生成
- 各週フォルダに置くのは：
  - `/weekXX/index.html`：最低限の記述のみでOK（メインHTML・JS読み込み）
  - `/weekXX/data.json`：各週のデータ（コンテンツ、レビュー、スコア等）

---

## 📌 主な論点

- **CurrentWeekの取得方法**  
  - フォルダ名（例：week07）から取得し、main.js側で動的に処理

- **JSONの位置と読み込み**  
  - 各週のdata.jsonをメインJSが自動取得
  - 将来的には1つのスプレッドシート → JSON自動生成に移行したい

- **Navbarのリンク制御**  
  - currentWeekに応じて前週・次週リンクをJSで動的生成
  - 存在しない場合は非表示（例：week01に前週なし）

- **最終目標**  
  - Excel更新のみでWeb更新完了する夢の自動化構造！

---

## 💡 進行方針

- まずは2025年夏アニメから導入テスト
- Spring 2025 の Week 6 完了後に導入作業スタート
- 将来的には Markdown化やCMSレベルの管理構造へ展開も視野

---

## 🔒 このファイルは保存用チャットまとめ
作成者：Jin + ChatGPT（Mia）
作成日：2025年7月14日
